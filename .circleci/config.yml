version: 2.1
orbs:
    utils: arrai/utils@1.11.0
    flake8: arrai/flake8@16.0.0
    pypi: arrai/pypi@2.0.1
    github: arrai/github@2.0.1
executors:
    python27:
        docker:
            - image: cimg/python:2.7
    python35:
        docker:
            - image: cimg/python:3.5
    python36:
        docker:
            - image: cimg/python:3.6
    python37:
        docker:
            - image: cimg/python:3.7
    python38:
        docker:
            - image: cimg/python:3.8
    python39:
        docker:
            - image: cimg/python:3.9
    python310:
        docker:
            - image: cimg/python:3.10
    python311:
        docker:
            - image: cimg/python:3.11
jobs:
    build:
        executor: python311
        resource_class: small
        steps:
            - checkout
            - run:
                name: Verify tag matches release version
                command: |
                    DIST_VERSION=$(python -c 'from argparse_color_formatter import __version__; print(__version__)')
                    if [ -z "${DIST_VERSION}" ] || [ "${DIST_VERSION}" != "${CIRCLE_TAG}" ]; then
                        echo "Git tag: ${CIRCLE_TAG} does not match the release version: ${DIST_VERSION}"
                        exit 1
                    fi
            - run:
                name: Build Package
                command: |
                    pip install --user --upgrade build
                    python -m build
            - save_cache:
                paths:
                    - ~/project/dist
                key: build-{{ arch }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}
    tests:
        parameters:
            executor:
                description: "Execution environment for the test job."
                type: executor
                default: python311
        executor: <<parameters.executor>>
        steps:
            - checkout
            - when:
                condition:
                    equal: [ main, << pipeline.git.branch >> ]
                steps:
                    - utils/add_ssh_config:
                        host: "docs"
                        hostname: ${DOCS_HOST}
                        port: ${DOCS_PORT}
                        user: ${DOCS_USER}
                    - utils/make_status_shield:
                        status: running
                        color: lightblue
            - run: pip install -r requirements.txt -r test_requirements.txt | cat; test ${PIPESTATUS[0]} -eq 0
            - run: coverage run -m unittest tests
            - run:
                when: always
                command: |
                    coverage html
                    coverage report | grep -oP '^TOTAL.*\d' | awk '{print $NF}' >> /tmp/.coveragep
            - utils/rsync_folder:
                when: always
                folder: ./htmlcov/
                remote_folder: ${CIRCLE_BRANCH}/htmlcov_${CIRCLE_JOB}
                host: docs
            - run:
                when: always
                command: pip freeze > ~/pip.freeze
            - utils/rsync_file:
                when: always
                file: ~/pip.freeze
                remote_file: ${CIRCLE_BRANCH}/${CIRCLE_JOB}.freeze
                host: docs
            - when:
                condition:
                    equal: [ main, << pipeline.git.branch >> ]
                steps:
                    - utils/make_coverage_shield:
                        when: always
                        link: "https://${DOCS_HOST}/${CIRCLE_PROJECT_REPONAME}/artifacts/${CIRCLE_BRANCH}/htmlcov_${CIRCLE_JOB}/"
                    - utils/rsync_file:
                        when: always
                        file: /tmp/coverage.svg
                        remote_file: ${CIRCLE_BRANCH}/${CIRCLE_JOB}.coverage.svg
                        host: docs
                    - utils/make_status_shield:
                        when: on_success
                        status: passed
                        color: brightgreen
                    - utils/make_status_shield:
                        when: on_fail
                        status: failed
                        color: red
                    - utils/rsync_file:
                        when: always
                        file: ~/status.svg
                        remote_file: ${CIRCLE_BRANCH}/${CIRCLE_JOB}.svg
                        host: docs
workflows:
    test_and_build:
        jobs:
            - tests:
                name: python27
                context: arrai-global
                executor: python27
            - tests:
                name: python35
                context: arrai-global
                executor: python35
            - tests:
                name: python36
                context: arrai-global
                executor: python36
            - tests:
                name: python37
                context: arrai-global
                executor: python37
            - tests:
                name: python38
                context: arrai-global
                executor: python38
            - tests:
                name: python39
                context: arrai-global
                executor: python39
            - tests:
                name: python310
                context: arrai-global
                executor: python310
            - tests:
                name: python311
                context: arrai-global
                executor: python311
            - build:
                name: build
                requires:
                    - python27
                    - python35
                    - python36
                    - python37
                    - python38
                    - python39
                    - python310
                    - python311
                filters:
                    tags:
                        only: /.*/
                    branches:
                        ignore: /.*/
            - github/create_release:
                name: release_on_github
                context: arrai-global
                requires:
                    - build
                filters:
                    tags:
                        only: /.*/
                    branches:
                        ignore: /.*/
            - pypi/upload_release:
                name: publish
                context: arrai-public-package-publishing
                requires:
                    - build
                filters:
                    tags:
                        only: /.*/
                    branches:
                        ignore: /.*
    lint:
        jobs:
            - flake8/flake8:
                name: flake8
                flake8_cmd: pflake8
                context: arrai-global
                wd: ~/project
                filters:
                    branches:
                        only:
                            - main
            - flake8/flake8:
                name: flake8-no-badge
                flake8_cmd: pflake8
                create_badges: false
                wd: ~/project
                filters:
                    branches:
                        ignore:
                            - main
