version: 2.1
orbs:
  utils: arrai/utils@dev:2
executors:
  python37:
    environment:
        LANG: en_US.UTF-8
    docker:
     - image: circleci/python:3.7.2
jobs:
  python37:
    executor: python37
    steps:
      - checkout
      - run: sudo apt-get install rsync
      - utils/add_ssh_config:
          host: "docs"
          hostname: ${DOCS_HOST}
          port: ${DOCS_PORT}
          user: ${DOCS_USER}
      - utils/make_status_shield:
          status: running
          color: lightblue
      - run: pip install -r requirements.txt -r test_requirements.txt | cat; test ${PIPESTATUS[0]} -eq 0
      - run: coverage run setup.py test
      - run:
          when: always
          command: |
            coverage html
            export COVERAGE_PERCENTAGE=$(coverage report | grep -oP '^TOTAL.*\d' | awk '{print $NF}')
      - utils/rsync_folder:
          when: always
          folder: ./htmlcov/
          remote_folder: htmlcov_${CIRCLE_BRANCH}_${CIRCLE_JOB}
          host: docs
      - utils/make_coverage_shield:
          when: always
          percentage: ${COVERAGE_PERCENTAGE}
          link: "https://${DOCS_HOST}/${CIRCLE_PROJECT_REPONAME}/htmlcov_${CIRCLE_BRANCH}_${CIRCLE_JOB}/"
      - utils/rsync_file:
          when: always
          file: ~/coverage.svg
          remote_file: ${CIRCLE_BRANCH}.${CIRCLE_JOB}.coverage.svg
          host: docs
      - run:
          when: always
          command: pip freeze > ~/pip.freeze
      - utils/rsync_file:
          when: always
          file: ~/pip.freeze
          remote_file: ${CIRCLE_BRANCH}.${CIRCLE_JOB}.freeze
          host: docs
      - utils/make_status_shield:
          when: on_success
          status: passed
          color: brightgreen
          file: ~/status.svg
      - utils/make_status_shield:
          when: on_fail
          status: failed
          color: red
          file: ~/status.svg
      - utils/rsync_file:
          when: always
          file: ~/status.svg
          remote_file: ${CIRCLE_BRANCH}.${CIRCLE_JOB}.svg
          host: docs
workflows:
  test:
    jobs:
      - python37:
          context: arrai-global
